{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-442aa64b7f3ba96b.js","node_modules/regenerator-runtime/runtime.js","src/js/config.js","src/js/helpers.js","src/js/model.js","node_modules/@swc/helpers/src/_define_property.mjs","node_modules/@parcel/runtime-js/lib/runtime-641a625b46cdbb0e.js","src/js/views/View.js","node_modules/fracty/fracty.js","src/js/views/recipeView.js","src/js/views/searchView.js","src/js/views/previewView.js","src/js/views/resultsView.js","src/js/views/paginationView.js","src/js/views/bookmarksView.js","src/js/views/addRecipeView.js","src/js/controller.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"4ko55\\\":\\\"index.ca742c20.js\\\",\\\"hOerA\\\":\\\"icons.c14567a0.svg\\\"}\"));","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","\n//5. configuration file => contains all the variables that are constants and will be reused across the project\n\n//5. upper case naming convention for constants that will never change\n//5. API use case => changes in API will can be made directly in config which will automatically update across the project\nexport const API_URL = 'https://forkify-api.herokuapp.com/api/v2/recipes/'\n\nexport const KEY = '33620772-9064-490d-a5a5-9f2472257d43'\n\nexport const TIMEOUT_SEC = 10;\n\nexport const RES_PER_PAGE = 10;\n\nexport const MODAL_CLOSE_SEC = 2.5","import { async } from 'regenerator-runtime'\nimport { TIMEOUT_SEC } from './config.js';\n\n//5. Helper functions => reusable functions across project\nconst timeout = function (s) {\n    return new Promise(function (_, reject) {\n        setTimeout(function () {\n            reject(new Error(`Request took too long! Timeout after ${s} second`));\n        }, s * 1000);\n    });\n};\n\nexport const AJAX = async function (url, uploadData = undefined) { //set uploadData to undefined (when fetching)\n    try {\n        const fetchPro = uploadData ? fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(uploadData),\n        }) : fetch(url);\n\n        const res = await Promise.race([fetchPro, timeout(TIMEOUT_SEC)])\n        const data = await res.json()\n\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`)\n        return data;\n    } catch (err) {\n        throw err;\n    }\n}\n\n/*\nexport const getJSON = async function (url) {\n    try {\n        //1. await for promise of fetch() (stops code execution in the background) and store promise in variable (store response object)\n        const res = await Promise.race([fetch(url), timeout(TIMEOUT_SEC)])//3. use id to dynamically show recipe\n        //5. setTimeout() => note: 10s appears randomly => set in config\n        //1. await for promise of json() (stops code execution in the background) and store converted JSON data in variable\n        const data = await res.json()\n\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`) //where API already provides its own error message \n\n        //return data from getJSON function as it will be used externally\n        return data; //5. resolved value of promise by json()\n    } catch (err) {\n        // console.error(err); //5. promise it being fulfilled despite rejection\n        //5. must rethrow error so that it may propagate out of getJSON() to the model.js error handling block\n        throw err; //5. throw to reject error so that it may be caught in model.js\n    }\n}\n\nexport const sendJSON = async function (url, uploadData) {\n    try {\n        const res = await Promise.race([fetch(url, { //18. fetch() object of options\n            method: 'POST', // 18. set type (post => send )\n            headers: {\n                'Content-Type': 'application/json', //letting API know the format of the upload\n            },\n            body: JSON.stringify(uploadData),  //payload of request\n        }), timeout(TIMEOUT_SEC)])\n        const data = await res.json()\n\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`)\n        return data;\n    } catch (err) {\n        throw err;\n    }\n}\n*/","//refer to architecture\nimport 'regenerator-runtime/runtime'\nimport { API_URL, RES_PER_PAGE, KEY } from './config.js'\n// import { getJSON, sendJSON } from './helpers.js'\nimport { AJAX } from './helpers.js'\n\n\n//4. live connection import/export => changes in state will result in changes throughout code\nexport const state = {\n    recipe: {}, //4. set initial state as an empty object (no original data manipulation)\n\n    //8. all data retrieved from search API will be stored\n    search: {\n        query: '', //good to store query in state => know what people are searching for\n        results: [],\n        page: 1,\n        resultsPerPage: RES_PER_PAGE,\n    },\n    bookmarks: [],\n\n};\n\nconst createRecipeObject = function (data) {\n    //1. console.log(res, data); //1. where data's object has a property called 'data' that stores recipe information\n    //1. eformat API json property names => remove underscores\n    //1. property name = value ==> use destructuring\n    //1. let recipe = data.data.recipe;\n    const { recipe } = data.data; //1. use 'let' to immediately create a new object\n    //4. this recipe variable will be responsible for only providing data to the state.recipe object (not the same)\n\n    //4. pull data from web api and add properties (manipulating) empty custom recipe object => impure function with the side effect of manipulating state variable \n    // state.recipe = {\n    return {\n        //1. set new object to have the following properties with their respective value set to the values taken from data.data.recipe (API object)\n        id: recipe.id,\n        title: recipe.title,\n        publisher: recipe.publisher,\n        sourceUrl: recipe.source_url,\n        image: recipe.image_url,\n        servings: recipe.servings,\n        cookingTime: recipe.cooking_time,\n        ingredients: recipe.ingredients,\n        //18. most of the default API recipes do not have a key, cannot simply add key property => add only if one exists\n        ...(recipe.key && { key: recipe.key }) //18. short circuiting ==> if recipe.key exists && return key: recipe.key object (as an object) => spread operator to unpack it immediately in the same line\n        //18. similar to turnery operator but usable as a property/value setter\n    };\n}\n\n//4. retrieving data from the web: conversion from web api format => custom format (no output)\nexport const loadRecipe = async function (id) { //4. pass id as model is not generating it but controller\n    //4. Error handling\n    try {\n        //1. LOADING RECIPE\n        const data = await AJAX(`${API_URL}${id}?key=${KEY}`) //5. resolved value of promise by json() => await\n        //19. adding ?key=${KEY} => inputs own recipes into search base \n\n        state.recipe = createRecipeObject(data)\n\n\n        // 14. bookmark persistence => as recipe renders from scratch, every selection of recipe will remove bookmark ===> SOLUTION: ADD BOOKMARKED PROPERTY ON LOAD (T/F) => check API object against boomark array state and set bookmarked to API object true else false otherwise\n        if (state.bookmarks.some(bookmark => bookmark.id === id))\n            state.recipe.bookmarked = true\n        else state.recipe.bookmarked = false\n\n        // console.log(state.recipe);\n    } catch (err) {\n        //5. temporary error handling\n        console.error(`Own message: ${err}`); //5. currently error is occuring in helpers.js => goal is to handle it in model.js\n\n        //7. rethrow error\n        throw err //7. propagate error so that current async function gets rejected and able to be caught in controller.js (otherwise it'll register as settled => error in model but not in controller)\n    }\n}\n\n//8. Search functionality\n\nexport const loadSearchResult = async function (query) { //function will be called externally (controller) => need to pass argument\n    try {\n        state.search.query = query; //8. store query \n\n        const data = await AJAX(`${API_URL}?search=${query}&key=${KEY}`)\n        //19. adding ?key=${KEY} => inputs own recipes into search base \n        console.log(data); //8. object => 'data' object => 'recipes' array (note that recipes only contain select properties of their respective recipes => usage purely search based and can be used then to find the specific recipe details)\n\n        state.search.results = data.data.recipes.map(rec => { //8. returns new array with current objects which shall be stored into the state for search \n            return {\n                //8. ensure same property names as state.recipe\n                id: rec.id,\n                title: rec.title,\n                publisher: rec.publisher,\n                image: rec.image_url,\n                ...(rec.key && { key: rec.key }) //19. adding key to search results\n            };\n        });\n        state.search.page = 1;  //12. returning page to 1 upon new search (as opposed to maintaining state)\n    } catch (err) {\n        console.log(err);\n        throw err\n    }\n}\n\n//10. return only the page to be rendered and not the entire object\n//10. page = default set in state \nexport const getSearchResultsPage = function (page = state.search.page) { //10. does not have to be async as API fetch already completed\n    //10. know current page\n    state.search.page = page;\n\n    const start = (page - 1) * state.search.resultsPerPage; //0 //10. will be dynamic => i.e. pass page 1, 1 - 1 = 0 => set start parameter\n    const end = (page * state.search.resultsPerPage) //9;\n\n    return state.search.results.slice(start, end) //note end parameter is non-inclusive\n}\n\nexport const updateServings = function (newServings) {\n    //12. reach into state.recipe.ingredients => change 'quantity' (data manipulation)\n    state.recipe.ingredients.forEach(ing => {\n        ing.quantity = ing.quantity * newServings / state.recipe.servings\n        //12. new Qt = oldQt * newServings / old Servings\n    })\n\n    //12. persist new state of servings so that further changes can be made\n    state.recipe.servings = newServings\n}\n\nconst persistBookmarks = function () { //16. do not need to export as it is being called within model.js\n    localStorage.setItem('bookmarks', JSON.stringify(state.bookmarks))\n}\n\nexport const addBookmark = function (recipe) {\n    //14. add bookmark to state\n    state.bookmarks.push(recipe)\n\n    //14. mark current recipe as bookmark\n    if (recipe.id === state.recipe.id) state.recipe.bookmarked = true //setting new property to recipe\n\n    //16. place bookmarks into local storage\n    persistBookmarks();\n}\n\n//14. Common practice => add something by passing entire object, removing something by passing only the id\nexport const deleteBookmark = function (id) {\n    //14. remove from bookmarks array\n    const index = state.bookmarks.findIndex(el => el.id === id) //14. return and set variable of index as index of element with the same id that was passed into the function\n    state.bookmarks.splice(index, 1); //14. remove the element at the position of the specified index\n    //14. mark current recipe as NOT bookmarked\n    if (id === state.recipe.id) state.recipe.bookmarked = false\n\n    persistBookmarks();\n}\n\n//16. pull bookmarks from local storage (on load/initialisation)\nconst init = function () {\n    const storage = localStorage.getItem('bookmarks')\n    if (storage) state.bookmarks = JSON.parse(storage)\n}\n// 16. comment init() out when using the debugger clearBookmarks\ninit()\n\n//16. debugging => clear bookmarks on reload from local storage without having to remove them one by one\nconst clearBookmarks = function () {\n    localStorage.clear('bookmarks')\n}\n// keep clearBookmarks() commented out and use when needed\n// clearBookmarks()\n\n\nexport const uploadRecipe = async function (newRecipe) { //18. async as it will make a request to upload data\n    try {\n        //18. take data out of string and put into object\n        //18. must convert data to match fetch data of API (where ingredients are stored as entry objects in an array)\n        // console.log(Object.entries(newRecipe));\n        const ingredients = Object.entries(newRecipe).filter(entry => entry[0].startsWith('ingredient') && entry[1] !== '').map(ing => {\n            // const ingArr = ing[1].replaceAll(' ', '').split(',')\n            const ingArr = ing[1].split(',').map(el => el.trim())\n            //test if ingArr has the length of 3\n            if (ingArr.length !== 3) throw new Error('Wrong ingredient format. Please use the correct format') //render error message to addRecipeView.js\n            const [quantity, unit, description] = ingArr; //split elements accordingly and store into individual variables via destructuring \n\n\n            return { quantity: quantity ? +quantity : null, unit, description }; //return destructured elements as an object to match API format\n        }); //entries => convert to array where entry[0] is first element of array entry and entry[1] is second element of array entry\n        // console.log(ingredients); //ignores empty strings and other entries that are not ingredients\n\n\n\n        const recipe = { //set format to be the same as API\n            title: newRecipe.title,\n            source_url: newRecipe.sourceUrl,\n            image_url: newRecipe.image,\n            publisher: newRecipe.publisher,\n            cooking_time: +newRecipe.cookingTime,\n            servings: +newRecipe.servings,\n            ingredients,\n        };\n        // console.log(recipe);\n        const data = await AJAX(`${API_URL}?key=${KEY}`, recipe);  //18. sendJSON will return recipe data, must be stored and awaited \n        //18. convert received object into state.recipe in the same format usable by application\n        state.recipe = createRecipeObject(data)\n        addBookmark(state.recipe); //automatically adds newly created recipe to bookmarks\n\n    } catch (err) {\n        throw err;\n    }\n\n\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('4ko55') + require('./helpers/bundle-manifest').resolve(\"hOerA\");","\n//9. parent view to contain common methods to be inherited by the children views\n\nimport icons from 'url:../../img/icons.svg' //parcel 1\n\n//9. export class itself as no view instances will be created from it \nexport default class View {\n    _data;\n\n    //20. writing js documentaion using /** */\n    /**\n     * Render the received object ot the DOM\n     * @param {Object | Object[]} data The data to be rendered (e.g. recipe)\n     * @param {boolean} [render=true] If false, create markup string instead of rendering to the DOM \n     * @returns {undefined | string} A markup string is returned if render=false\n     * @this {Object} View object\n     * @author Howell Tong\n     * @todo Finish implementation\n     */\n\n    //4. render() will be common to all the Views => render HTML but for different purposes THEREFORE do not generate HTML directly in method but externally as #generateMarkup()\n    render(data, render = true) { //4. model.state.recipe will be passed into render() in the controller \n        //9. immediately checking if data exists\n        if (!data || (Array.isArray(data) && data.length === 0)) return this.renderError()\n        //9. if no data OR if array length = 0 (using isArray helper func to check if data is array) => terminate code and render error\n\n        this._data = data;\n        // console.log(this._data);\n        const markup = this._generateMarkup();\n        //9. PARENT CLASS uses _generateMarkup() in method therefore ALL CHILD CLASSES must have _generateMarkup()\n        //2. remove default message not removed\n        // recipeContainer.innerHTML = ''\n\n        //15. \n        if (!render) return markup; //15. return markup and not insert into DOM (hence parameter => pass through 'false' in resultsView and bookmarksView so previewView can return markup and terminate function at this point (avoiding clear and insertAdjacentHTML))\n\n        this._clear();\n        //2. Insert HTML into DOM (parent element)\n        this._parentElement.insertAdjacentHTML('afterbegin', markup)\n        //2. NOTE: on first load => 3 problems: missing icons, missing ingredients, default message not removed\n    }\n\n    //13. update multiple components => parent class and not instances\n    update(data) {\n        //13. REMOVE: on refresh (error) => controlRecipes() => window.location.hash => immediately tries to load recipe even if there was no search before => resultsView.update() => no search results => returns empty array => will satisfy conditional operand and immediately displays error (UNWANTED)\n        // if (!data || (Array.isArray(data) && data.length === 0)) return this.renderError()\n        this._data = data; //13. update and then set new data\n\n        const newMarkup = this._generateMarkup(); //13. updates markup => requires current markup and new markup for comparison where 'this._generateMarkup()' is current markup\n        //13. create new markup but NOT render it \n        const newDOM = document.createRange().createContextualFragment(newMarkup) //13. chain method will convert string => real DOM node objects\n        const newElements = Array.from(newDOM.querySelectorAll('*')) //13. select all elements of newDOM and convert to Array\n        // console.log(newElements); //13. provides NodeList of all elements => can make comparisons of data-set\n        //13. make comparisons of newDOM (logged in console) and what is currrently displayed on view (as page has not yet been re-rendered)\n        const curElements = Array.from(this._parentElement.querySelectorAll('*')) //13. select current elements and convert to array\n        // console.log(curElements); //13. old\n        // console.log(newElements); //13. new\n\n        newElements.forEach((newEl, i) => { //13. new element and current index (get current element)\n            //13. must loop over both arrays simultaneously\n            const curEl = curElements[i];\n            // console.log(curEl, newEl.isEqualNode(curEl)) //13. comparing content ==> boolean (true/false) depending on change of content AS WELL as attributes (e.g. data attributes) => note: also applies to parent elements (e.g. ingredient display, containers, etc)\n\n            //13. UPDATE CHANGED TEXT\n            if (\n                !newEl.isEqualNode(curEl) && newEl.firstChild?.nodeValue.trim() !== ''\n            ) { //13. if newEl and curEl are not equal => change content\n                //13: node => changes parent element as well as they won't be equal (e.g. containers) => must determine if element contains text\n                //13. node property => nodeValue where returns null or text content depending on value type\n                //13. firstChild() => newEl is the element, need to select text itself which is the first child of the node\n                // console.log(newEl.firstChild.nodeValue.trim()); //13. provides string of text content\n                curEl.textContent = newEl.textContent //13. cur el updated to new el (incl descendants)\n            }\n\n            //13. UPDATE CHANGED ATTRIBUTES\n            //13. change attributes so that dataset can change\n            if (!newEl.isEqualNode(curEl)) {\n                // console.log(newEl.attributes); //13. log attributes of all elements that have CHANGED in a NamedNodeMap\n                Array.from(newEl.attributes).forEach(attr => curEl.setAttribute(attr.name, attr.value)); //13. replace all of the current attributes with the attributes coming from the new element\n            }\n        })\n\n    }\n\n    _clear() { //private method as it will only be called in the class\n        this._parentElement.innerHTML = ''\n    }\n\n    //2. External function => load spinner\n    renderSpinner() { //4. public method so it can be called in the controller\n        const markup = `\n  <div class=\"spinner\">\n          <svg>\n            <use href=\"${icons}#icon-loader\"></use>\n          </svg>\n        </div>\n  `;\n        this._clear();\n        this._parentElement.insertAdjacentHTML('afterbegin', markup);\n    };\n\n    //7. Error handling (before 7. handled in model.js)\n    renderError(message = this._errorMessage) { //7. dynamically render error message on UI by passing it in\n        //default is this._errorMessage => if nothign is passed through the parameter, default will display => intention: pass nothign to renderError() in controller so that this message will always be the response\n\n        const markup = `\n        <div class=\"error\">\n            <div>\n              <svg>\n                <use href=\"${icons}#icon-alert-triangle\"></use>\n              </svg>\n            </div>\n            <p>${message}</p>\n          </div>\n        `;\n        this._clear();\n        this._parentElement.insertAdjacentHTML('afterbegin', markup);\n    }\n\n    //7. success handling\n    renderMessage(message = this._message) {\n        const markup = `\n        <div class=\"message\">\n            <div>\n              <svg>\n                <use href=\"${icons}#icon-smile\"></use>\n              </svg>\n            </div>\n            <p>${message}</p>\n          </div>\n        `;\n        this._clear();\n        this._parentElement.insertAdjacentHTML('afterbegin', markup);\n    }\n}","// FRACTY CONVERTS DECIMAL NUMBERS TO FRACTIONS BY ASSUMING THAT TRAILING PATTERNS FROM 10^-2 CONTINUE TO REPEAT\n// The assumption is based on the most standard numbering conventions\n// e.g. 3.51 will convert to 3 51/100 while 3.511 will convert to 3 23/45\n// Throw any number up to 16 digits long at fracty and let fracy do the work.\n// If number is beyond 16 digits fracty will truncate at 15 digits to compensate for roundoff errors created in IEEE 754 Floating Point conversion.\n\nmodule.exports = function (number) { //IEEE 754 Floating Point conversion problems will cause entires above 16 digits to convert incorrectly to binary with small roundoff errors, so keeping entry below 16 digits will help fracy make the most accurate calculation. If there are 16 or more digits in the number fracty can be called on the decimal part of the number only to maximize accuracy.\n    let type;\n\n    if (number < 0) { //If number is less than zero it's negative.\n        number = Math.abs(number);\n        type = '-';\n    } else {\n        type = '';\n    }\n\n    if (number === undefined) {\n        return `Your input was undefined.`\n    }\n\n    if (isNaN(number)) { //isNaN() instead of Number.isNaN() is used so that if fracty is called on something that is not a number but could be a string of numbers the function still passes as true.\n        return `\"${number}\" is not a number.`;\n    }\n\n    if (number == 9999999999999999) { //There's no reason to call fracty on an integer at all, but in the unlikely case that the number is 9999999999999999 JavaScript will round to 10000000000000000 and fracty handles that. Interestingly, if fracty is called on -9999999999999999, which fracty converts to absolute value, the number logged is 10000000000000000 but the number stored is 9999999999999999, so this if statement works for both 9999999999999999 and -9999999999999999.\n        return `${type}9999999999999999`;\n    }\n\n    if (number > 9999999999999999) { //Beyond 9999999999999999 IEEE 754 Floating Point conversion inaccuracies will occur in JavaScript.\n        return `Too many digits in your integer to maintain IEEE 754 Floating Point conversion accuracy.`;\n    }\n\n    if (Number.isInteger(number)) { //If fracty is called on an integer, return the integer.\n        return `${type}${number}`;\n    }\n\n    if (number < .000001) { //Non negative numbers with integers equal to zero that are followed by six or more consecutive zeros will coerce to scientific notation but, interestingly enough, numbers with integers that are not zero that are followed by six or more consecutive zeros will not coerce to scientific notation. Therefore, in the case of numbers with integers that are not zero that are followed by six or more consecutive zeros, fracty is more accurate than it is with numbers that have  integers equal to zero that are followed by six or more consecutive zeros because fracty doesn't have to coerce the decimal part of the number to '0' so soon. This it the smartest way fracty can compensate for this \"bug\" in JavaScript.\n        return '0';\n    }\n\n    const numberString = number.toString();\n    const entry = numberString.split('.');\n    let integer = entry[0];\n    let decimal;\n\n    if (decimal == '0' && integer !== '0') { //If there's no decimal just return the integer.\n        return integer;\n    } else if (decimal == '0' && integer == '0') { //If only zero is entered return zero.\n        return '0';\n    } else if (numberString.length >= 17){ //If the number entered has equal to or more than 16 digits (decimal is excluded) truncate the last digit to prevent errors in IEEE 754 Floating Point conversion.\n        decimal = entry[1].slice(0,entry[1].length-1);\n    } else {\n        decimal = entry[1];\n    }\n\n    if (decimal == '99' && integer !== '0') { //Otherwise it will automatically round to 1/1.\n        return `${integer} 99/100`;\n    } else if (decimal == '99' && integer == '0') {\n        return `99/100`;\n    } else if (1 - parseFloat(`.${decimal}`) < .0011) { //If decimal is at least .99899999999 assume that the fraction will inevitably result in 1/1, so circumnavigate the issue that .999, upon IEEE 754 Floating Point conversion, accidentally becomes .9989999999999997 by replacing it with '999', which fracty will further reduce properly.\n        decimal = '999';\n    }\n\n    if (decimal == undefined) {\n        return integer;\n    }\n\n    const decimalRev = decimal.split('').reverse().join(''); //Reverse the string to look for patterns.\n    const patternSearch = /^(\\d+)\\1{1,2}/; //This greedy regex matches the biggest pattern that starts at the beginning of the string (at the end, in the case of the reversed string). A lazy regex doesn't work because it only identifies subpatterns in cases where subpatterns exist (e.g. '88' in '388388388388'), thus pattern capture must be greedy.\n    let pattern = decimalRev.match(patternSearch); //If there's a pattern, it's full sequence is in [0] of this array and the single unit is in [1] but it may still need to be reduced further.\n\n    if (pattern && decimal.length > 2) { //In keeping with the most standard numbering conventions of monetary divisibility, etc., if there's a pattern beyond two decimal places, reverse back the pattern that the greedy regex deemed a single unit, and the full pattern sequence, respectively.\n        let patternSequence = pattern[0].split('').reverse().join('');\n        let endPattern = pattern[1].split('').reverse().join('');\n\n        if (endPattern.length > 1) { //Test to see if the pattern unit is actually a single repeating digit.\n            let endPatternArray = endPattern.split('');\n            let testSingleUnit = 1;\n            for (let i = 0; i < endPatternArray.length; i++) {\n                testSingleUnit /= endPatternArray[0]/endPatternArray[i];\n            }\n\n            if (testSingleUnit === 1 ) {\n                endPattern = endPatternArray[0];\n            }\n          }\n\n        if (endPattern.length > 1 && endPattern.length % 2 === 0) { //If what the greedy regex deems to be the pattern unit has a length greater than 1 and an even number of digits, check to see if splitting it in half will give two equal parts. If it does, one of those equal parts will be the pattern. There's no need repeat this test as no case needing this test more than once would exist for strings of 16 digits or less.\n            endPattern = parseInt(endPattern.slice(0,endPattern.length/2),10) - parseInt(endPattern.slice(endPattern.length/2,endPattern.length),10) === 0 ? endPattern.slice(0,endPattern.length/2) : endPattern;\n        }\n            return yesRepeat(decimal, endPattern, patternSequence, integer, type); //Begin calculating the numerator and denominator for decimals that have a pattern.\n        } else {\n            return noRepeat(decimal, integer, type); //Begin calculating the numerator and denominator for decimals that don't have a pattern.\n    }\n}\n\n  //IF THERE'S A TRAILING PATTERN FRACTY DIVIDES THE INPUT BY ONE SUBTRACTED FROM THE NEAREST BASE 10 NUMBER WITH NUMBER OF ZEROS EQUAL TO THE LENGTH OF THE REPEATED PATTERN (I.E. A SERIES OF 9'S) MULTIPLIED BY THE BASE 10 NUMBER GREATER THAN AND CLOSEST TO THE INPUT.\nfunction yesRepeat(decimal, endPattern, patternSequence, integer, type) {\n\n    const rep = true; //The numerator repeats.\n    const nonPatternLength = decimal.length - patternSequence.length >= 1 ? decimal.length - patternSequence.length : 1; //Does the length of the non pattern segment of the input = 0? If it does, that's incorrect since we know it must equal at least 1, otherwise it's the length of the decimal input minus the length of the full pattern.\n    const decimalMultiplier2 = Math.pow(10,(nonPatternLength)); //Second multiplier to use.\n    const float = parseFloat(`0.${decimal}`); //Convert the decimal input to a floating point number.\n    const decimalMultiplier1 = Math.pow(10,(endPattern.length)); //Find the right multiplier to use for both numerator and denominator, which will later have 1 subtracted from it in the case of the denominator.\n    const numerator = Math.round(((float * decimalMultiplier1) - float) * Math.pow(10,(nonPatternLength))); //Find the numerator to be used in calculating the fraction that contains a repeating trailing sequence.\n    const denominator = (decimalMultiplier1-1) * decimalMultiplier2; //Caluculate the denominator using the equation for repeating trailing sequences.\n    return reduce(numerator, denominator, integer, type, rep); //Further reduce the numerator and denominator.\n}\n\n//IF THERE'S NO TRAILING PATTERN FRACTY DIVIDES THE INPUT BY THE NEAREST BASE 10 INTEGER GREATER THAN THE NUMERATOR.\nfunction noRepeat(decimal, integer, type) {\n    const rep = false; //The numerator doesn't repeat.\n    const numerator = parseInt(decimal, 10); //Numerator begins as decimal input converted into an integer.\n    const denominator = Math.pow(10,(decimal.length)); //Denominator begins as 10 to the power of the length of the numerator.\n    return reduce(numerator, denominator, integer, type, rep); //Reduce the numerator and denominator.\n}\n\n//FRACTY REDUCES THE FRACTION.\nfunction reduce(numerator, denominator, integer, type, rep) {\n\n    const primeNumberArray = [2, 3, 5]; //If the numerator isn't from a repeating decimal case, the initialized array of prime numbers will suffice to find the common denominators.\n\n    if (rep === true) {  //If the numerator is from a repeating decimal case, fracty generates an array of prime numbers from 2 to the square root of the numerator, loops over the array to find the common denominators, and reduces the fraction. Since reducing by prime numbers beyond i^2 isn't necessary, fracty creates and array of the prime numbers that, when squared, are still less than or equal to the numerator.\n        for (let i = 3; i * i <= numerator; i+=2) {\n            if (numerator % i === 0) {\n                primeNumberArray.push(i);\n            }\n        }\n    }\n\n    let j = 0; //Initialize counter over the prime number array for the while loop.\n    let comDenom = 1; //Initialize the common denominator.\n    let num = numerator; //Initialize the numerator.\n    let den = denominator; //Initialize the denominator.\n\n    while (j <= primeNumberArray.length) { //While i is less than the length of the array of prime numbers, check divisibility for both numerator and denominator and if there's a common denominator, divide it by that prime number and continue until they no longer reduce and you have to check the next prime number in the array.\n        if (num % primeNumberArray[j] === 0 && den % primeNumberArray[j] === 0) {\n            comDenom = comDenom * primeNumberArray[j];\n            num = num/primeNumberArray[j];\n            den = den/primeNumberArray[j];\n        } else {\n            j++;\n        }\n    }\n\n    return returnStrings(den, num, integer, type);\n}\n\n//FRACTY RETURNS THE REDUCED FRACTION AS A STRING.\nfunction returnStrings (den, num, integer, type) {\n\n    if (den === 1 && num === 1) { //If '1/1'\n        integer = `${type}${(parseInt(integer) + 1).toString()}`; //Add 1 to the integer and return a string without a fraction.\n        return `${integer}`;\n    } else if (num === 0) { //This happens when there are >=15 zeros in the decimal part of your number and the number has an integer part that is not zero and so doesn't coerce to scientific notation.\n        return `${type}${integer}`;\n    } else if (integer == '0') { //If the integer is '0' just return the fraction.\n        return `${type}${num}/${den}`;\n    } else {\n        return `${type}${integer} ${num}/${den}`; //If there's an integer and a fraction return both.\n    }\n\n}\n","//9. parent class\nimport View from './View.js'\n//9. *******CHANGE ALL # => _ as parent-child inheritance (Parcel/Babel) does not support private fields, only protected\n\n//2. HTML in JS => icons pathway are routed to current folder but needs to be routed to the 'dist' folder (with the specific name)\n//2. Parcel => can import and create a variable that stores the specific path to the dist folder with the specific (and new) file name\n// import icons from '../img/icons.svg' //parcel 1\nimport icons from 'url:../../img/icons.svg' //parcel 1\n// console.log(icons); //2. import icons from '../img/icons.svg' //parcel 1\n\nimport fracty from \"fracty\"; //4. import according npm docs name\n// console.log(Fraction); //Fraction object containing method Fraction => to call: Fraction.Fraction() else destructure on import to avoid .notation\n\n//4. exporting RecipeView into controller will require a new object creation in Controller (unnecessary work and possibility of accidentally creating multiple views)\n//4. ==> AVOID by creating object in this file and export object itself\n//9. ADD PARENT METHODS\nclass RecipeView extends View { //4. later will have a parent class 'View' which will contain methods that all child views should inherit + private methods/classes\n  //must define #parentElement and #data differently across Views\n  _parentElement = document.querySelector('.recipe'); //4. makes it easier to render things in the parent element\n  _errorMessage = `We could not find that recipe. Please try another one.` //7. view already knows the message it wants to display\n  _message = ``;\n\n\n\n\n  //6. PUBLISHER\n  addHandlerRender(handler) {\n    //6. DOM elements  === PRESENTATION LOGIC; Event handling === APPLICATION LOGIC => UI should be in Views but the callback function required is in the controller.js\n    //3. Listening for changes in HASH url \n    // window.addEventListener('hashchange', handler)\n    // //3. NOTE: event listener is listening for change => will update url with id upon CHANGE (if copied and pasted url, will not show recipe as there is no change) => SOLUTION: Listen for LOAD\n    // window.addEventListener('load', handler)\n\n    ['hashchange', 'load'].forEach(ev => window.addEventListener(ev, handler));\n  }\n\n  //12. New event listener\n  addHandlerUpdateServings(handler) {\n    //12. buttons of interest => increase/decrease servings via button ('.btn--tiny)\n    //12. event delegation\n    this._parentElement.addEventListener('click', function (e) {\n      const btn = e.target.closest('.btn--update-servings') //btn--tiny => class; btn--update-servings => functionality\n      if (!btn) return;\n      // console.log(btn);\n      const { updateTo } = btn.dataset //12. note that update-to => auto conversion to updateTo\n      if (+updateTo > 0) handler(+updateTo); //12. convert to number outside of declaration and in condition as cannot set variable property as +... => error undefined\n\n      //connect newServings between view and controller via dataset attribute\n    })\n\n  }\n\n  // 14. Event delegation => bookmark\n  addHandlerAddBookmark(handler) {\n    this._parentElement.addEventListener('click', function (e) {\n      //14. specific bookmark will not exist on load as markup has not yet been generated => hence parent element/event delegation\n      const btn = e.target.closest('.btn--bookmark');\n      if (!btn) return;\n      handler();\n    })\n  }\n\n\n  _generateMarkup() { //4. cannot directly add to render() as each recipe will be unique => create separate private method\n\n    //2. Change html to update dynamically according to the given recipe object \n    //2. EXAMPLE: replace src=\"src/img/test-1.jpg\" with src=\"${recipe.image}\" (recipe object => dynamic image url)\n    //2. NOTE: ingredients => array of different separate ingredients information as objects (quantity, unit, description)\n    //2. ICONS => comes from import => rerouted to DIST folder so it may display\n    // const markup = ` //4. immediately return so render() can use \n    return `\n    <figure class=\"recipe__fig\">\n        <img src=\"${this._data.image}\" alt=\"${this._data.title\n      }\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${this._data.title}</span>\n        </h1>\n      </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"${icons}#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${this._data.cookingTime}</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"${icons}#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">${this._data.servings}</span>\n            <span class=\"recipe__info-text\">servings</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--update-servings\" data-update-to=${this._data.servings - 1}>\n                <svg>\n                  <use href=\"${icons}#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--update-servings\" data-update-to=${this._data.servings + 1}>\n                <svg>\n                  <use href=\"${icons}#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated ${this._data.key ? '' : 'hidden'}\">\n            <svg>\n              <use href=\"${icons}#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round btn--bookmark\">\n            <svg class=\"\">\n              <use href=\"${icons}#icon-bookmark${this._data.bookmarked ? '-fill' : ''}\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\n          <ul class=\"recipe__ingredient-list\">\n          ${this._data.ingredients.map(this._generateMarkupIngredient).join('') //2. results become a string of ingredients; join('') => connect all the uniquely generated html elements together as one html element\n      }\n          </ul>\n        </div>\n\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">${this._data.publisher}</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=\"${this._data.sourceUrl}\"\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"${icons}#icon-arrow-right\"></use>\n            </svg>\n          </a>\n        </div>\n        `;\n  }\n\n  _generateMarkupIngredient(ing) { //2. must return html; therefore cannot use forEach and should use map()\n    return `\n            <li li class=\"recipe__ingredient\" >\n              <svg class=\"recipe__icon\">\n                <use href=\"${icons}#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${ing.quantity ? fracty(ing.quantity).toString() : ''}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${ing.unit}</span>\n                ${ing.description}\n              </div>\n            </li >\n            `;\n  }\n}\n\nexport default new RecipeView(); //4. no data passed in => does not require constructor()\n","\n//DOM => input fields \n\nclass SearchView {\n    _parentEl = document.querySelector('.search')\n\n    //8. get query\n    getQuery() {\n        const query = this._parentEl.querySelector('.search__field').value;\n        this._clearInput() //8. keeping clearInput function within view\n        return query;\n    }\n\n    _clearInput() {\n        this._parentEl.querySelector('.search__field').value = '';\n    }\n\n    //8. pub/sub \n    addHandlerSearch(handler) {\n        this._parentEl.addEventListener('submit', function (e) { //8. cannot pass handler() directly as DOM is form and default refresh must be prevented\n            e.preventDefault();\n            handler()\n        })\n    }\n\n}\n\nexport default new SearchView()","// //9. parent class\nimport View from './View.js'\nimport icons from 'url:../../img/icons.svg' //parcel 1\n\n//15. creating a child view for results and bookmarks as they are essentially the same code\n\nclass PreviewView extends View {\n  _parentElement = '';\n\n  _generateMarkup() {\n    const id = window.location.hash.slice(1)\n    return `\n      <li class=\"preview\">\n        <a class=\"preview__link ${this._data.id === id ? 'preview__link--active' : ''}\" href=\"#${this._data.id}\">\n          <figure class=\"preview__fig\">\n            <img src=\"${this._data.image}\" alt=\"${this._data.title}\" />\n          </figure>\n          <div class=\"preview__data\">\n            <h4 class=\"preview__title\">${this._data.title}</h4>\n            <p class=\"preview__publisher\">${this._data.publisher}</p>\n            <div class=\"preview__user-generated ${this._data.key ? '' : 'hidden'\n      }\">\n              <svg>\n              <use href=\"${icons}#icon-user\"></use>\n              </svg>\n            </div>\n          </div>\n        </a>\n      </li>\n    `;\n  }\n}\n\nexport default new PreviewView();","//9. parent class\nimport View from './View.js'\nimport previewView from './previewView.js'\nimport icons from 'url:../../img/icons.svg' //parcel 1\n\nclass ResultsView extends View {\n    _parentElement = document.querySelector('.results')\n    _errorMessage = `No recipes found for your query. Please try another one.` //7. view already knows the message it wants to display\n    _message = ``;\n\n    _generateMarkup() {\n        console.log(this._data);\n        return this._data.map(result => previewView.render(result, false)).join('');\n    }\n\n\n    // _generateMarkup() {\n    //     //9. _data => inherited from parent \n    //     console.log(this._data); //9. returns array => forEach to return unique markup\n    //     return this._data.map(this._generateMarkupPreview).join('')\n\n    // }\n\n    // //13. if results.id === url id => activate class 'preview__link--active' => selected side bar container stays selected (css)\n    // _generateMarkupPreview(result) {\n    //     const id = window.location.hash.slice(1) //13. get url\n    //     return `\n    // <li class=\"preview\">\n    //     <a class=\"preview__link ${result.id === id ? 'preview__link--active' : ''}\" href=\"#${result.id}\">\n    //     <figure class=\"preview__fig\">\n    //         <img src=\"${result.image}\" alt=\"${result.title}\" />\n    //           </figure>\n    // <div class=\"preview__data\">\n    //     <h4 class=\"preview__title\">${result.title}</h4>\n    //     <p class=\"preview__publisher\">${result.publisher}</p>\n    // </div>\n    //         </a >\n    //       </li >\n    // `;\n\n    // }\n}\n\nexport default new ResultsView();","import View from './View.js'\nimport icons from 'url:../../img/icons.svg' //parcel 1\n\nclass PaginationView extends View {\n    _parentElement = document.querySelector('.pagination')\n\n    //11. pub/sub \n    addHandlerClick(handler) {\n        //event delegation => two buttons \n        this._parentElement.addEventListener('click', function (e) { //cannot pass func directly => need to determine which button is being clicked first\n            const btn = e.target.closest('.btn--inline') //11. .closest => up the tree (parent) on click ==> target element (trigger click) will look for closest parent with '.btn--inline' class and EXECUTE HANDLER FUNCTION i.e. function is tied to parent but can be triggered by children elements (e.g. span or icon)\n            // console.log(btn);\n            if (!btn) return;\n\n            const goToPage = +btn.dataset.goto //11. convert to number for next/previous page \n            // console.log(goToPage); //string of number \n\n            handler(goToPage); //pass goToPage number back to controller\n        })\n    }\n\n    _generateMarkup() {\n        const curPage = this._data.page\n\n        const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage);\n        // console.log(numPages);\n        // 11. data require: State => search {results, page, resultsPerPage}\n\n        //11. ADD DATA ATTRIBUTE TO HTML ELEMENTS => tie data to pages to direct page selection => dataset\n\n        // 11. Page 1, and there are other pages\n\n        if (curPage === 1 && numPages > 1) {\n            return `\n            <button data-goto=\"${curPage + 1}\" class=\"btn--inline pagination__btn--next\">\n            <span>Page ${curPage + 1}</span>\n            <svg class=\"search__icon\">\n              <use href=\"${icons}#icon-arrow-right\"></use>\n            </svg>\n          </button>\n            `\n        }\n\n        // 11. Last page\n        if (curPage === numPages && numPages > 1) { //11. exclude page 1 scenario in second operand as already accounted for\n            //return previous button\n            return ` \n                <button data-goto=\"${curPage - 1}\" class=\"btn--inline pagination__btn--prev\">\n                    <svg class=\"search__icon\">\n                    <use href=\"${icons}#icon-arrow-left\"></use>\n                    </svg>\n                    <span>Page ${curPage - 1}</span>\n                </button>\n            `\n        }\n\n        // 11. Other page\n        if (curPage < numPages) {\n            return ` \n                <button data-goto=\"${curPage - 1}\" class=\"btn--inline pagination__btn--prev\">\n                    <svg class=\"search__icon\">\n                    <use href=\"${icons}#icon-arrow-left\"></use>\n                    </svg>\n                    <span>Page ${curPage - 1}</span>\n                </button>\n                <button data-goto=\"${curPage + 1}\" class=\"btn--inline pagination__btn--next\">\n            <span>Page ${curPage + 1}</span>\n            <svg class=\"search__icon\">\n              <use href=\"${icons}#icon-arrow-right\"></use>\n            </svg>\n          </button>\n            `\n        }\n\n        // 11. Page 1, and there are NO other pages\n        return '' //page 1 => no need to render any buttons (no prev or next)\n    }\n\n}\n\nexport default new PaginationView();\n","//9. parent class\nimport View from './View.js'\nimport previewView from './previewView.js'\nimport icons from 'url:../../img/icons.svg' //parcel 1\n\nclass BookmarksView extends View {\n    _parentElement = document.querySelector('.bookmarks__list')\n    _errorMessage = `No bookmarks yet. Find a recipe and bookmark it.` //7. view already knows the message it wants to display\n    _message = ``;\n\n\n    //16. add handler => bug with curEl and newEl array size comparisons\n    addHandlerRender(handler) {\n        window.addEventListener('load', handler) //16. render bookmarks on load \n    }\n\n\n    _generateMarkup() {\n        // console.log(this._data);\n        //9. _data => inherited from parent \n        // console.log(this._data); //9. returns array => forEach to return unique markup\n        return this._data\n            .map(bookmark => previewView.render(bookmark, false))\n            .join(''); //15. markup that is returned must be a string to be inserted into HTML => view -> bookmarksView -> previewView => render() => generate markup => does not work ===> SOLUTION: change render() in View.js => render parameter (t/f)\n        //Reuse render() to pass array to previewView to generate markup rather than creating new function, however, must prevent it from inserting markup to the DOM as that is the default action of render()\n        //depending on which instance render() is called => will add markup to DOM (must avoid repeated render to DOM) therefore by adding parameter render=false, can avoid adding to DOM and returning the markup itself as an array of strings to be inserted in Views.js\n        // => bookmarksView.render(model.state.bookmarks) -> insert markup to DOM (render = true), render() on previewView therefore must reurn ONLY THE MARKUP and NOT INSERT TO DOM (render = false) by having bookmarksView pass array of bookmarks to have markup generated to previewView (previewView.render(bookmark, false))\n\n    }\n\n    //     _generateMarkup() {\n    //         return this._data.map(this._generateMarkupPreview).join('');\n    //     }\n\n    //     _generateMarkupPreview(result) {\n    //         const id = window.location.hash.slice(1)\n    //         return `\n    //     <li class=\"preview\">\n    //         <a class=\"preview__link ${result.id === id ? 'preview__link--active' : ''}\" href=\"#${result.id}\">\n    //         <figure class=\"preview__fig\">\n    //             <img src=\"${result.image}\" alt=\"${result.title}\" />\n    //               </figure>\n    //     <div class=\"preview__data\">\n    //         <h4 class=\"preview__title\">${result.title}</h4>\n    //         <p class=\"preview__publisher\">${result.publisher}</p>\n    //     </div>\n    //             </a >\n    //           </li >\n    //     `\n    //     }\n}\n\nexport default new BookmarksView();","import View from './View.js'\nimport icons from 'url:../../img/icons.svg' //parcel 1\n\nclass AddRecipeView extends View {\n    _parentElement = document.querySelector('.upload')\n    _message = 'Recipe was successfully uploaded.'\n\n    _window = document.querySelector('.add-recipe-window')\n\n    _overlay = document.querySelector('.overlay')\n\n    _btnOpen = document.querySelector('.nav__btn--add-recipe')\n\n    _btnClose = document.querySelector('.btn--close-modal')\n\n    constructor() { //instance construction\n        super();\n        this._addHandlerShowWindow();\n        this._addHandlerHideWindow();\n    }\n\n    toggleWindow() {\n        this._overlay.classList.toggle('hidden')\n        this._window.classList.toggle('hidden')\n    }\n\n    //17. listening for events on open/close (called as soon as the page loads => nothing to do with controller as nothing is being processed) therefore run function as soon as object is created\n    _addHandlerShowWindow() {\n        this._btnOpen.addEventListener('click', this.toggleWindow.bind(this)\n            // this._overlay.classList.toggle('hidden') //'this' key bound to btnOpen (incorrrect) => export function out of handler\n            // this._window.classList.toggle('hidden'0\n        )\n    }\n\n    _addHandlerHideWindow() {\n        this._btnClose.addEventListener('click', this.toggleWindow.bind(this))\n        this._overlay.addEventListener('click', this.toggleWindow.bind(this))\n    }\n\n    addHandlerUpload(handler) {\n        this._parentElement.addEventListener('submit', function (e) {\n            e.preventDefault();\n            const dataArr = [...new FormData(this)]; //17. pass in form\n            //17. array of arrays(entries) => convert entries to objects\n            const data = Object.fromEntries(dataArr) //17. object => unpacked entries\n            handler(data); //17. action of uploading data => API call => must get data to model.js\n\n        })\n    }\n\n    _generateMarkup() {\n\n    }\n\n}\n\n\nexport default new AddRecipeView();\n","//4. import from model \nimport * as model from './model.js' //model.(variableName)\nimport { MODAL_CLOSE_SEC } from './config.js'\nimport recipeView from './views/recipeView.js'\nimport searchView from './views/searchView.js'\nimport resultsView from './views/resultsView.js'\nimport paginationView from './views/paginationView.js'\nimport bookmarksView from './views/bookmarksView.js'\nimport addRecipeView from './views/addRecipeView.js'\n\n// import 'core-js/stable'\n// import 'regenerator-runtime/runtime'\n// import { async } from 'regenerator-runtime'\n\n// const recipeContainer = document.querySelector('.recipe'); //8. DOM => view\n\n// if (module.hot) {\n//   module.hot.accept();\n// }\n\n\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n/////////1. LOADING A RECIPE FROM API/////\n//1. IMPORT core-js + regenerator-runtime ==> polyfill\n////////2. RENDERING THE RECIPE////////\n/////////3. LISTENING FOR LOAD AND HASHCHANGE EVENTS///////\n//3. Create fake anchor tag in div .search-results ==> listening for changes in url hash key ===> clicking on the anchor tag will change the url to the respective hash key of the link\n////////4. REFACTORING FOR MVC////////////\n////////5. HELPERS AND CONFIGURATION FILES///////\n////////6. EVENT HANDLERS IN MVC: PUBLISHER-SUBSCRIBER PATTERN/////////\n////////7. IMPLEMENTING ERROR HANDLING AND SUCCESS MESSAGES////////\n//7. Handlding error: display an error message in the View\n////////8. IMPLEMENTING SEARCH RESULTS//////////////\n//8. User Search (EVENT) => Load search results (ASYNC) => Render search results\n////////9. IMPLEMENTING SEARCH RESULTS - RENDER IN SIDEBAR/////////\n//9. create resultsView\n////////10. IMPLEMENTING PAGINATION///////////\n////////11. IMPLEMENTING PAGINATION - PREV/NEXT BUTTONS///////\n//11. if(page 1) => next page UNLESS <10 results; if(page 2) => prev/next page UNLESS < 10 results (display only prev)\n////////12. UPDAtING RECIPE SERVINGS////////\n////////13. DEVELOPING A DOM UPDATING ALGORITHM///////\n//13. control servings in 12. => rerenders page entirely (image refresh every update)\n////////14. IMPLEMENTING BOOKMARKS///////\n////////15. IMPLEMENTING BOOKMARKS - BOOKMARKED TAB////////////\n////////16. STORING BOOKMARKS WITH LOCALSTORAGE///////////////\n////////17. UPLOADING A NEW RECIPE////////////\n////////18. UPLOADING A NEW RECIPE - SENDING DATA TO API////////\n////////19. UPLOADING A NEW RECIPE - HASH////////\n////////20. WRAPPING UP: FINAL CONSIDERATIONS - JSDOCS////////\n// Additional features/improvements\n// 1. display number of pages between the pagination buttons\n// 2. ability to sort search results by duration or number of ingredients\n// 3. Perform ingredient validation in view, before submitting the form \n// 4. Improve recipe ingredient input: separate in multiple fields and allow more than 6 ingredients\n// Features\n// 5. Shopping list feature: button on recipe to add ingredients to a list\n// 6. Weekly meal planning feature: assign recipes to the next 7 days and show on a weekly calendar\n// 7. Get nutrition data on each ingredient from spoonacular API and calculate the total calories of a recipe\n\n\n\n\n//1. controller function/event handler ==> GET single recipe from API\nconst controlRecipes = async function () {\n\n  try {\n    //3. Dynamically get the ID of the recipe as hash and show respective recipe according to that hash key\n    //Application Logic\n    const id = window.location.hash.slice(1); //3. where 'location' is the entire url => take hash\n    //3. .slice() to remove # symbol\n    // console.log(id); //#(whatever id it is)\n    //3. IF NO ID (i.e. root url) ==> error: 500 ===> no hash == searches for empty string \n    if (!id) return; //3. removes error and loads on homescreen (cancels search)\n    recipeView.renderSpinner() //presentation logic  //4. does not need to pass in parameter 'recipeContainer' as it will be passed within the class\n    //4. as renderSpinner is a public class => it'll be usable with any other views (e.g. bookmark view) as #parentElement and #data is applicable to all \n\n    //STEP 0: UPDAATE RESULTS VIEW TO MARK SELECTED SEARCH RESULT\n    //13. Update results view to mark selected search result\n    resultsView.update(model.getSearchResultsPage());\n\n    //STEP 1: UPDATING BOOKMARKS VIEW\n    // 15. Bookmarks tab => show selected recipe as highlighted\n    bookmarksView.update(model.state.bookmarks);\n\n    //STEP 2: LOADING RECIPE (from model)\n    await model.loadRecipe(id) //4. async function => returns promise \n    //4. does not return any data => no need to store into variable\n    // const { recipe } = model.state //4. temporarily store in variable 'recipe'\n\n    //STEP 3: RENDERING RECIPE \n    //4. Render with object exported from class\n    recipeView.render(model.state.recipe) //pass in data via render() which will be publically created in the class\n  } catch (err) {\n    //7. error handled by model => controller => recipeView\n    recipeView.renderError() //message should be hardcoded to view and not in controller (presentation logic)\n    // alert(err);\n    console.error(err);\n  }\n}\n// controlRecipes()\n\n//8. search\nconst controlSearchResults = async function () {\n  try {\n    //9. load spinner from parent => child \n    resultsView.renderSpinner();\n    // console.log(resultsView); //9. see prototype chain\n\n    //8. Get search query\n    const query = searchView.getQuery();\n    if (!query) return;\n    //8. initial state => no query => need to listen for 'submit' or 'click' event (pub-sub pattern)\n\n    //8. load search results\n    await model.loadSearchResult(query) //8. loadSearchResult() does not return anything and does not need to be stored (all it does is manipulate state)\n\n    //8. render results\n    // console.log(model.state.search.results);\n    //9. inherited method\n    // resultsView.render(model.state.search.results)\n    resultsView.render(model.getSearchResultsPage()) //10. render by pagination; store page number in state (render prev/next page); //default '' = page 1\n\n    //11. Render initial pagination buttons\n    //11. pass data required into paginationView.js : State => search {results, page, resultsPerPage}\n    paginationView.render(model.state.search)\n\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n//11. controller function/event handler => execute on click of page button\nconst controlPagination = function (goToPage) { //11. receive goToPage number from paginationView.js\n  // console.log(goToPage);\n\n  //11. NOTE => render() will OVERRIDE previous markup due to _clear() before any markup is inserted\n  //11. render NEW results (next/prev page)\n  resultsView.render(model.getSearchResultsPage(goToPage)) //11. render new results => automatically UPDATES state.search.page in model.js as it passes goToPage number back to model.js with a specific line of code updating page state\n  //11. render  NEW pagination buttons\n  paginationView.render(model.state.search) //11. update state.search.page in model.js to render NEW paginationView and therefore new buttons\n}\n\n//12. controller function/event handler => control servings\nconst controlServings = function (newServings) {\n  //12. update the recipe servings (in state) on click\n  model.updateServings(newServings)\n\n  //12. update the recipe view => re-render recipe with the new state\n  // recipeView.render(model.state.recipe) //13. rather than render() => update()\n  recipeView.update(model.state.recipe) //updates only text and attributes in the DOM and not the entire view\n}\n\nconst controlAddBookmark = function () {\n  //ADD/REMOVE BOOKMARK\n  //14. add bookmark only when recipe is NOT YET bookmarked\n\n  if (!model.state.recipe.bookmarked) model.addBookmark(model.state.recipe);\n  else model.deleteBookmark(model.state.recipe.id);\n\n  // console.log(model.state.recipe); //14. adds bookmarked: true => recipeView: if bookmarked: true => render fill\n  //UPDATE RECIPE VIEW\n  //14. update recipe for changed elements\n  recipeView.update(model.state.recipe);\n\n  //RENDER BOOKMARKS\n  bookmarksView.render(model.state.bookmarks); //15. In 13, stored entire data about the recipe into the bookmarks array in order to display them\n}\n\nconst controlBookmarks = function () {\n  bookmarksView.render(model.state.bookmarks)\n}\nconst controlAddRecipe = async function (newRecipe) { //18. convert to async as uploadRecipe is async (handling error)\n  // console.log(newRecipe);\n  try { //18. try/catch block to render incorrect format for ingredient entry by user\n    //18. Show loading spinner\n    addRecipeView.renderSpinner();\n\n    //17. Upload recipe data\n    await model.uploadRecipe(newRecipe) //18. convert to await as uploadRecipe is async (handling error)\n    console.log(model.state.recipe); //18. converted API to usable format => need to add bookmarked property and API key\n\n    //18. render newly created recipe in view\n    recipeView.render(model.state.recipe)\n\n    //18. display success message\n    addRecipeView.renderMessage()\n\n    //19. render bookmarked view (tab)\n    bookmarksView.render(model.state.bookmarks) //19. render not update as new element is being inserted\n\n    //19. Changing id into url\n    window.history.pushState(null, '', `#${model.state.recipe.id}`) //change url without reloading page; takes 3 arguments (state => irrelevant; set to null, title => irrelevant; set to '', url => `#${id}`)\n\n    //18. close form window automatically\n    setTimeout(function () { //18. using timeout so there is time for 'success' message to display\n      addRecipeView.toggleWindow()\n\n    }, MODAL_CLOSE_SEC * 1000)\n  } catch (err) {\n    console.error('own error', err);\n    addRecipeView.renderError(err.message) //18. renderError() from View.js using own custom message\n  }\n\n}\n\n\n//6. Subscriber\nconst init = function () {\n  bookmarksView.addHandlerRender(controlBookmarks);\n  recipeView.addHandlerRender(controlRecipes);\n  recipeView.addHandlerUpdateServings(controlServings);\n  recipeView.addHandlerAddBookmark(controlAddBookmark);\n  searchView.addHandlerSearch(controlSearchResults);\n  paginationView.addHandlerClick(controlPagination);\n  addRecipeView.addHandlerUpload(controlAddRecipe);\n  //12. test controlServings CANNOT work here => if test => controlRecipes\n  // controlServings() // 12.async not ready to test\n}\n\ninit();\n\n\n\n\n\n/*\n\nProject Planning\n\nPLANNING STEP\n1. User Stories\n- Description of the application's functionality from the user's perspecive\n- Common Format: As a [type of user], I want [an action] so that [a benefit]\n\na. As a user, I want to search for recipes, so that I can find new ideas for meals\nb. As a user, I want to be able to update the number of servings, so that I can cook a meal for different number of people\nc. As a user, I want to bookmark recipes, so that I can review them later\nd. As a user, I want to be able to create my own recipes, so that I have them all organised in the same app\ne. As a user, I want to be able to see my bookmarks and own recipes when I leave the app and come back later, so that I can close the app safely after cooking\n\n2. Features\na. Search functionality: input field to send request to API with searched keywords\na. Display results with pagination\na. Display recipe with cooking time, servings, and ingredients\nb. Change servings functionality: update all ingredients according to current number of servings\nc. Bookmarking functionality: display list of all bookmarked recipes\nd. User can upload own recipes\nd. User recipes will automatically be bookmarked\nd. User can only see their own recipes, not recipes from other users\ne. Store bookmark data in the browser using local storage\ne. On page load, read saved bookmarks from local storage and display\n\n3. Flowchart\n\n4. Architecture\nAspects of Good Architecture\n- Gives structure (the way the code is organised e.g. different modules, classes, and functions)\n- Gives maintainability: easily change it in the future\n- Gives expandability: easily add new features\n\n===> perfect architecture: incorporates all three aspects\n\nBuilding architecture methods:\n- Create own architecture (small projects)\n- Use a well-established architecture pattern (MVC - Model View Controller, MVP - Model View Presenter, Flux, etc)\n- Use a framework (React, Angular, Vue, Svelte, etc.)\n\nCOMPONENTS OF ANY ARCHITECTURE\n- Business logic\n=> Code that solves the actual business problem\n=> i.e. logic that is really related to solve the problem that the business set out to solve in the first place\n=> Directly related to what business does and what it needs\n=> Example: sending messages, storing transactions, calculating taxes...\n\n- State\n=> Essentially stores all thhe data about the application (data about the application's frontend)\n=> Shoudl be the \"single source of truth\"\n=> UI should be kept in sync with the state => changes in UI should match changes in state and vice versa\n=> I.e. keeps in sync with presentation logic\n=> State libraries exists ===> Redux/Modex\n\n- HTTP Library\n=> Responsible for making and receiving AJAX requests (e.g. fetch())\n=> Optional but almost always necessary in real-world apps\n\n- Application Logic (Router)\n=> Code that is only concerned about the implementation of applicaton itself\n=> Handles navigation and UI events (mapping actions to the user's navigation)\n\n- Presentation Logic (UI)\n=> Code that is concerned about the visible part of the appplication\n=> Essentially displays application state\n=> I.e. keeps in sync with state\n\nGood architecture has a method of separating these components\n\nMODEL-VIEW-CONTROLLER (MVC) ARCHITECTURE\nMVC architecture contains three main parts:\nModel:\n- Application's data\n- Business logic\n- State\n- HTTP library \n=> Works with the web (API/backend)\n\nController:\n- Application logic \n=> Bridge between Model and View (which should know nothing about each other => completely independent from each other)\n=> Handles UI events and dispatches tasks to model and view (controls and orchestrates UI action)\n=> Both View and Model do not have any ties to controller, controller is the one that acts upon and pulls from\n\nView:\n- Presentation logic (UI layer)\n- User interaction \n\nSteps starting from UI:\n0 => User event\n1 => Controller handles event (application logic - Controller)\n2 ===> Controller ===> change data and controller ===> change presentation (Model/View)\n3 => =AJAX request to the web (HTTP Library - Model) Model ---> Web ---> Model\n4 => Controller takes data from model and sents it to the view (model ---> controller ---> view) \n5 => View renders data for user to see (View ---> User)\n\nwhere ===> is connected by function call and import\nwhere ---> is data flow\n\n//RECIPE DISPLAY - MVC \n=> UI events (select recipe or load recipe ID) -> handled by controller\n=> data retrieval (load recipe [async]) -> handled by Model \n=> Render recipe -> Model ---> Controller ---> View\n\nEvent Handlers in MVC: Publisher-Subscriber Pattern\n- Events should be handled in the controller (otherwise we would have application logic in the view)\n- Events should be listened for in the view (otherwise we would need DOM elements in the controller)\nPublisher:\n=> Code that knows WHEN to react ==> event listener\nSubscriber:\n=> Code that wants to react ==> code to be executed upon event\n\n- Subscribe from the controller to the publisher in the views by passing in the subscriber function\n0 => Program starts\n1 => init() in controller passes in function as argument (has no control over publisher)\n2 => Event listener initialised\n3 => Event occurs \n4 => callback is called \n\nDEVELOPMENT STEP\n\n\n\n\n\n\n\n\n*/"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","parcelRequire","register","JSON","parse","$21b983287c82ebd3$var$runtime","exports","undefined","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","$a536fbf06af412b5$export$923ea8233b386e99","$a536fbf06af412b5$export$7167c830cefcb6b5","$77eae7726dbdfc03$export$2b3ff41fecbef7c8","uploadData","fetchPro","fetch","headers","body","stringify","res","race","s","_","setTimeout","data","json","ok","message","status","$0bc36518f6cf0450$export$ca000e230c0caa3e","recipe","search","query","results","page","resultsPerPage","bookmarks","$0bc36518f6cf0450$var$createRecipeObject","title","publisher","sourceUrl","source_url","image","image_url","servings","cookingTime","cooking_time","ingredients","$0bc36518f6cf0450$export$8d7f79465139ab72","start","end","$0bc36518f6cf0450$var$persistBookmarks","localStorage","setItem","$0bc36518f6cf0450$export$72009cc673d27d80","bookmarked","storage","getItem","$0bc36518f6cf0450$var$init","$9139f4380ced0e7c$export$2e2bcd8739ae039","$1fdba731d27b481b$exports","getBundleURL","$c732e9e6223e19d8$export$2e2bcd8739ae039","render","Array","isArray","renderError","_data","markup","_generateMarkup","_clear","_parentElement","insertAdjacentHTML","update","newMarkup","newDOM","document","createRange","createContextualFragment","newElements","from","querySelectorAll","curElements","newEl","curEl","isEqualNode","firstChild","nodeValue","trim","textContent","attributes","attr","setAttribute","innerHTML","renderSpinner","$parcel$interopDefault","_errorMessage","renderMessage","_message","$b0f2bd7507f92d39$var$reduce","numerator","denominator","integer","rep","primeNumberArray","j","comDenom","num","den","parseInt","toString","$b0f2bd7507f92d39$var$returnStrings","$b0f2bd7507f92d39$exports","number","Math","abs","Number","isInteger","numberString","split","decimal","parseFloat","pattern","join","patternSequence","endPattern","endPatternArray","testSingleUnit","nonPatternLength","decimalMultiplier2","pow","float","decimalMultiplier1","round","$b0f2bd7507f92d39$var$yesRepeat","$b0f2bd7507f92d39$var$noRepeat","$95a7d6c4a0a50ae1$export$2e2bcd8739ae039","addHandlerRender","handler","ev","window","addEventListener","addHandlerUpdateServings","e","btn","target","closest","updateTo","dataset","addHandlerAddBookmark","map","_generateMarkupIngredient","ing","quantity","unit","description","querySelector","$8d9571d82bdb9304$export$2e2bcd8739ae039","getQuery","_parentEl","_clearInput","addHandlerSearch","preventDefault","$d511a9d636491df2$export$2e2bcd8739ae039","location","hash","$99e6646170dcffc3$export$2e2bcd8739ae039","console","log","$f03ebf78cca01ded$export$2e2bcd8739ae039","addHandlerClick","goToPage","goto","curPage","numPages","ceil","$0884acaefafcc64c$export$2e2bcd8739ae039","bookmark","$da53bbe9f60c4332$export$2e2bcd8739ae039","toggleWindow","_overlay","classList","toggle","_window","_addHandlerShowWindow","_btnOpen","bind","_addHandlerHideWindow","_btnClose","addHandlerUpload","dataArr","FormData","fromEntries","super","$cdc8bba1cf7e6fe0$var$controlRecipes","some","$0bc36518f6cf0450$export$b96725c7a035d60b","$cdc8bba1cf7e6fe0$var$controlSearchResults","recipes","rec","$0bc36518f6cf0450$export$be2b23a594353a40","$cdc8bba1cf7e6fe0$var$controlPagination","$cdc8bba1cf7e6fe0$var$controlServings","newServings","$0bc36518f6cf0450$export$5e23f4642ecad5ea","$cdc8bba1cf7e6fe0$var$controlAddBookmark","index","findIndex","el","splice","$0bc36518f6cf0450$export$136048bcb9946c75","$cdc8bba1cf7e6fe0$var$controlBookmarks","$cdc8bba1cf7e6fe0$var$controlAddRecipe","newRecipe","entries","filter","startsWith","ingArr","$0bc36518f6cf0450$export$d660c2254e74960d","history","pushState"],"version":3,"file":"index.ca742c20.js.map"}